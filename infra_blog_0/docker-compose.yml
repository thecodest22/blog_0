version: "3.8"
services:
  db:
    # По настройке БД:
    # https://postgrespro.ru/docs/postgresql/9.4/runtime-config-resource
    # https://postgrespro.ru/docs/postgresql/9.6/performance-tips
    # https://habr.com/ru/articles/578744/
    # https://highload.guide/blog/query_performance_postgreSQL.html
    image: postgres:16-alpine
    networks:
      - postgres
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./db_dumps:/home/dumps
      - db_data:/var/lib/postgres/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 2
      start_interval: 5s
      start_period: 5s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G

  pgadmin:
    image: dpage/pgadmin4:7
    networks:
      - postgres
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin_dumps:/tmp/dumps
      - pg_admin_data:/var/lib/pgadmin
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  backend:
    build:
      context: ../backend
    volumes:
      - ../backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8001:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
        restart: true
#    command: ["/bin/bash", "-c", "gunicorn --workers 4 config.wsgi --bind 0.0.0.0:8000"]
#    entrypoint: ["gunicorn"]
    command: ["gunicorn", "--workers", "4", "config.wsgi", "--bind", "0.0.0.0:8000"]

  nginx:
    image: nginx:1.25.4-alpine
    volumes:
      - static_volume:/var/html/static
      - media_volume:/var/html/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      backend:
        condition: service_started

#  rabbit:
#    image: rabbitmq:3.9.29-alpine
#    restart: unless-stopped

volumes:
  db_data:
  pg_admin_data:
  static_volume:
  media_volume:

networks:
  postgres:
    driver: bridge